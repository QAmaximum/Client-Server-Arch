1) Методы HTTP
GET - получить ответ от сервера
POST - отправить данные на сервер
DELETE - удаление ресурса на сервере
PUT - обновить данные на сервере
PATCH - внести частичные изменения на указанном ресурсе

2) Статус коды ответов сервера
~~100 - Информационные.
101 - Код присылается в ответ на запрос клиента, содержащий заголовок Upgrade:, и указывает, что сервер переключился на протокол, который был указан в заголовке
102 - Сервер получил запрос, но обработка еще не завершена
103 - В ответе сообщаются ресурсы, которые могут быть загружены заранее, пока сервер будет подготавливать основной ответ
~~200 - Успешные.
201 - Запрос успешно выполнен и был создан ресурс
202 - Запрос принят, но еще не обработан
204 - Нет содержимого для ответа на запрос
205 - Этот код присылается, когда запрос обработан, чтобы сообщить клиенту, что необходимо сбросить отображение документа, который прислал этот запрос
~~300 - Перенаправляющие, после кода подтверждения перенаправляет на другой URL
301 - Этот код ответа значит, что URI запрашиваемого ресурса был изменён
302 - Этот код ответа значит, что запрошенный ресурс временно изменён
305 - Это означает, что запрошенный ресурс должен быть доступен через прокси
308 - Это означает, что ресурс теперь постоянно находится в другом URI
~~400 - Клиентские ошибки. Этот ответ означает, что сервер не понимает запрос из-за неверного синтаксиса
401 - Для получения запрашиваемого ответа нужна аутентификация
405 - Сервер знает о запрашиваемом методе, но он был деактивирован и не может быть использован
403 - у клиента нет прав для доступа к запрашиваемому ресурсу
404 - ресурс не существует
409 - Конфликт. Этот ответ отсылается, когда запрос конфликтует с текущим состоянием сервера
410 - Этот ответ отсылается, когда запрашиваемый контент удалён с сервера
~~500 - Серверные ошибки. Внутренняя ошибка сервера
502 - Эта ошибка означает что сервер, во время работы в качестве шлюза для получения ответа, нужного для обработки запроса, получил (недопустимый) ответ
503 - Сервер не готов обрабатывать запрос
504 - время на обработку запроса вышло
505 - HTTP-версия не поддерживается

3) Хост - это компьютер или сервер, подключенный к интернету, который действует в формате «клиент-сервер». Интерфейсом хоста могут быть сайт или любой онлайн-сервис, распространяющий информацию, размещённую на хостинге

4) Порт - это цифровой идентификатор (набор цыфр до 16 Бит) программы, которая используется для создания определенного интернет соединения привязанного к IP- адресу

5) IP - уникальный идентификатор (адрес) устройства, подключённого к локальной сети или интернету

6) URL, URN, URI
URL - это строка символов, которая используется для идентификации какого-либо ресурса, но только по его адресу, по его местоположению
URN - это строка символов, которая используется для идентификации какого-либо ресурса, но только по его имени
URI - это строка символов, которая используется для идентификации какого-либо ресурса по его адресу или по его имени, либо по тому и тому вместе

7) Proxy server - это сервер-посредник между пользователем и интернет-ресурсом. Человек подключается не напрямую к серверу нужного сайта, а к прокси-серверу — и уже он передает данные на сайт и отправляет обратно в браузер пользователя

8) Хедеры запросов и ответов
General Headers (используются в запросах и ответах):
Cache Control - Основные дерективы для управления кэшированием
Connection - Сведения о проведении соединения
Date - Дата генерации отклика
MIME-Version - Версия протокола MIME, по которому было сформировано сообщение
Pragma - Особенные опции выполнения операции
Trailer - Список полей, имеющих отношение к кодированию сообщения при передаче
Transfer Encoding - Список способов кодирования, которые были применены к сообщению для передачи
Upgrade - Список предлагаемых клиентом протоколов. Сервер указывает один протокол
Via - Список версий протокола, названий и версий прокси-серверов, через которых прошло сообщение
Warning - Код, агент, сообщение и дата, если возникла критическая ситуация

9) Токен -  компактное устройство, предназначенное для обеспечения информационной безопасности пользователя, также используется для идентификации его владельца, безопасного удалённого доступа к информационным ресурсам
Виды токенов:
Аппаратные токены (USB) - это физические устройства, обеспечивающие авторизацию пользователей для доступа к защищённым сетям
JSON Web Tokens (JWT) - Он определяет простой автономный способ защищённой передачи информации между сторонами
Одноразовые токены One-Time Password (OTP) - это защищённые аппаратные устройства или программы, способные генерировать одноразовые пароли
API-токены - API-токены используются как уникальные идентификаторы приложения, запрашивающего доступ к сервису. Сервис генерирует API-токен для приложения, чтобы оно использовало его при запросе сервиса